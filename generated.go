// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package go_graphql_test

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ListUsersListUsersUser includes the requested fields of the GraphQL type User.
type ListUsersListUsersUser struct {
	Id         string `json:"id"`
	First_name string `json:"first_name"`
	Last_name  string `json:"last_name"`
}

// GetId returns ListUsersListUsersUser.Id, and is useful for accessing the field via an interface.
func (v *ListUsersListUsersUser) GetId() string { return v.Id }

// GetFirst_name returns ListUsersListUsersUser.First_name, and is useful for accessing the field via an interface.
func (v *ListUsersListUsersUser) GetFirst_name() string { return v.First_name }

// GetLast_name returns ListUsersListUsersUser.Last_name, and is useful for accessing the field via an interface.
func (v *ListUsersListUsersUser) GetLast_name() string { return v.Last_name }

// ListUsersResponse is returned by ListUsers on success.
type ListUsersResponse struct {
	ListUsers []ListUsersListUsersUser `json:"listUsers"`
}

// GetListUsers returns ListUsersResponse.ListUsers, and is useful for accessing the field via an interface.
func (v *ListUsersResponse) GetListUsers() []ListUsersListUsersUser { return v.ListUsers }

func ListUsers(
	ctx context.Context,
	client graphql.Client,
) (*ListUsersResponse, error) {
	var err error

	var retval ListUsersResponse
	err = client.MakeRequest(
		ctx,
		"ListUsers",
		`
query ListUsers {
	listUsers {
		id
		first_name
		last_name
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}
